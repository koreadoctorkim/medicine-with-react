{"version":3,"sources":["components/TOC.js","components/ReadContent.js","components/CreateContent.js","components/UpdateContent.js","components/Subject.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["TOC","newProps","newState","this","props","data","lists","i","length","push","key","id","href","onClick","e","preventDefault","onChangePage","bind","title","Component","ReadContent","desc","CreateContent","action","method","onSubmit","target","value","type","name","placeholder","UpdateContent","state","inputFormHandler","setState","onChange","Subject","sub","Control","onChangeMode","App","max_content_id","mode","selected_content_id","subject","welcome","contents","_title","_desc","_article","_content","getReadContent","_contents","concat","_id","Array","from","className","Number","_mode","window","confirm","splice","alert","getContent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mRAsCeA,E,8LAnCWC,EAAUC,GAC5B,OAAGC,KAAKC,MAAMC,OAASJ,EAASI,O,+BAShC,IAHA,IAAIC,EAAQ,GACRD,EAAOF,KAAKC,MAAMC,KAClBE,EAAI,EACFA,EAAIF,EAAKG,QACXF,EAAMG,KACF,wBAAIC,IAAKL,EAAKE,GAAGI,IACb,uBACIC,KAAM,YAAYP,EAAKE,GAAGI,GAC1BE,QAAS,SAASF,EAAIG,GAClBA,EAAEC,iBACFZ,KAAKC,MAAMY,aAAaL,IAC1BM,KAAKd,KAAME,EAAKE,GAAGI,KAEpBN,EAAKE,GAAGW,SAGrBX,GAAQ,EAEZ,OACI,6BACI,4BACKD,Q,GA7BHa,aCWHC,E,iLATP,OACI,iCACI,4BAAKjB,KAAKC,MAAMc,OACff,KAAKC,MAAMiB,U,GALFF,aCsBXG,E,iLApBP,OACI,iCACI,sCACA,0BAAMC,OAAO,mBAAmBC,OAAO,OACnCC,SAAU,SAASX,GACfA,EAAEC,iBACFZ,KAAKC,MAAMqB,SACPX,EAAEY,OAAOR,MAAMS,MACfb,EAAEY,OAAOL,KAAKM,QAEpBV,KAAKd,OACP,2BAAG,2BAAOyB,KAAK,OAAOC,KAAK,QAAQC,YAAY,WAC/C,2BAAG,8BAAUD,KAAK,OAAOC,YAAY,iBACrC,2BAAG,2BAAOF,KAAK,kB,GAfPT,a,cCmDbY,E,YAlDX,WAAY3B,GAAO,IAAD,8BACd,4CAAMA,KACD4B,MAAQ,CACTrB,GAAG,EAAKP,MAAMC,KAAKM,GACnBO,MAAM,EAAKd,MAAMC,KAAKa,MACtBG,KAAK,EAAKjB,MAAMC,KAAKgB,MAEzB,EAAKY,iBAAmB,EAAKA,iBAAiBhB,KAAtB,gBAPV,E,8EASDH,GACbX,KAAK+B,SAAL,eAAgBpB,EAAEY,OAAOG,KAAMf,EAAEY,OAAOC,U,+BAGxC,OACI,iCACI,sCACA,0BAAMJ,OAAO,mBAAmBC,OAAO,OACnCC,SAAU,SAASX,GACfA,EAAEC,iBACFZ,KAAKC,MAAMqB,SACPtB,KAAK6B,MAAMrB,GACXR,KAAK6B,MAAMd,MACXf,KAAK6B,MAAMX,OAEjBJ,KAAKd,OACP,2BAAOyB,KAAK,SAASC,KAAK,KAAKF,MAAOxB,KAAK6B,MAAMrB,KACjD,2BACI,2BACIiB,KAAK,OACLC,KAAK,QACLC,YAAY,QACZH,MAAOxB,KAAK6B,MAAMd,MAClBiB,SAAUhC,KAAK8B,oBAGvB,2BACI,8BACIJ,KAAK,OACLC,YAAY,cACZH,MAAOxB,KAAK6B,MAAMX,KAClBc,SAAUhC,KAAK8B,oBAGvB,2BAAG,2BAAOL,KAAK,kB,GA5CPT,aCcbiB,E,iLAZP,OACI,gCACI,4BAAI,uBAAGxB,KAAK,IAAIC,QAAS,SAASC,GACtBA,EAAEC,iBACFZ,KAAKC,MAAMY,gBACbC,KAAKd,OAAQA,KAAKC,MAAMc,QACjCf,KAAKC,MAAMiC,S,GARNlB,aCqBPmB,E,iLAnBP,OACI,4BACI,4BAAI,uBAAG1B,KAAK,WAAWC,QAAS,SAASC,GAC7BA,EAAEC,iBACFZ,KAAKC,MAAMmC,aAAa,WAC1BtB,KAAKd,OAHX,WAIJ,4BAAI,uBAAGS,KAAK,WAAWC,QAAS,SAASC,GAC7BA,EAAEC,iBACFZ,KAAKC,MAAMmC,aAAa,WAC1BtB,KAAKd,OAHX,WAIJ,4BAAI,2BAAOU,QAAS,SAASC,GACjBA,EAAEC,iBACFZ,KAAKC,MAAMmC,aAAa,WAC1BtB,KAAKd,MAAOyB,KAAK,SAASD,MAAM,iB,GAfpCR,aCsIPqB,G,kBA9HX,WAAYpC,GAAQ,IAAD,8BACf,4CAAMA,KACDqC,eAAiB,EACtB,EAAKT,MAAQ,CACTU,KAAK,UACLC,oBAAoB,EACpBC,QAAQ,CACJ1B,MAAM,gEACNmB,IAAI,yLAERQ,QAAQ,CACJ3B,MAAM,kCACNG,KAAK,6KAETyB,SAAS,CACL,CAACnC,GAAG,EAAGO,MAAM,2BAAQG,KAAK,kEAC1B,CAACV,GAAG,EAAGO,MAAM,eAAMG,KAAK,6DACxB,CAACV,GAAG,EAAGO,MAAM,qBAAOG,KAAK,2EAjBlB,E,8EAuBf,IADA,IAAId,EAAI,EACFA,EAAIJ,KAAK6B,MAAMc,SAAStC,QAAO,CACjC,IAAIH,EAAOF,KAAK6B,MAAMc,SAASvC,GAC/B,GAAGF,EAAKM,KAAOR,KAAK6B,MAAMW,oBACtB,OAAOtC,EAGXE,GAAQ,K,mCAIZ,IAAIwC,EAAQC,EAAOC,EAAW,KAC9B,GAAuB,YAApB9C,KAAK6B,MAAMU,KACVK,EAAS5C,KAAK6B,MAAMa,QAAQ3B,MAC5B8B,EAAQ7C,KAAK6B,MAAMa,QAAQxB,KAC3B4B,EAAW,kBAAC,EAAD,CAAa/B,MAAO6B,EAAQ1B,KAAM2B,SAC1C,GAAuB,SAApB7C,KAAK6B,MAAMU,KAAgB,CACjC,IAAIQ,EAAW/C,KAAKgD,iBACpBF,EAAW,kBAAC,EAAD,CAAa/B,MAAOgC,EAAShC,MAAOG,KAAM6B,EAAS7B,WACpC,WAApBlB,KAAK6B,MAAMU,KACjBO,EAAW,kBAAC,EAAD,CAAexB,SAAU,SAASsB,EAAQC,GACzC7C,KAAKsC,eAAiBtC,KAAKsC,eAAiB,EAC5C,IAAIW,EAAYjD,KAAK6B,MAAMc,SAASO,OAChC,CAAC1C,GAAGR,KAAKsC,eAAgBvB,MAAM6B,EAAQ1B,KAAK2B,IAEhD7C,KAAK+B,SAAS,CACVY,SAASM,EACTV,KAAK,OACLC,oBAAoBxC,KAAKsC,kBAE/BxB,KAAKd,QACW,WAApBA,KAAK6B,MAAMU,OACjBQ,EAAW/C,KAAKgD,iBAChBF,EAAW,kBAAC,EAAD,CAAe5C,KAAM6C,EAAUzB,SAAU,SAAS6B,EAAKP,EAAQC,GAG9D,IAFA,IAAII,EAAYG,MAAMC,KAAKrD,KAAK6B,MAAMc,UAClCvC,EAAI,EACFA,EAAI6C,EAAU5C,QAAO,CACvB,GAAG4C,EAAU7C,GAAGI,KAAO2C,EAAI,CACvBF,EAAU7C,GAAK,CAACI,GAAG2C,EAAKpC,MAAM6B,EAAQ1B,KAAK2B,GAC3C,MAEJzC,GAAQ,EAEZJ,KAAK+B,SAAS,CACVY,SAASM,EACTV,KAAK,UAEXzB,KAAKd,SAEnB,OAAO8C,I,+BAGP,OACI,yBAAKQ,UAAU,OACX,kBAAC,EAAD,CACIvC,MAAOf,KAAK6B,MAAMY,QAAQ1B,MAC1BmB,IAAKlC,KAAK6B,MAAMY,QAAQP,IACxBrB,aAAc,WACVb,KAAK+B,SAAS,CAACQ,KAAK,aACtBzB,KAAKd,QAGX,kBAAC,EAAD,CACIE,KAAMF,KAAK6B,MAAMc,SACjB9B,aAAc,SAASL,GACnBR,KAAK+B,SAAS,CACVQ,KAAK,OACLC,oBAAoBe,OAAO/C,MAEjCM,KAAKd,QAGX,kBAAC,EAAD,CACIoC,aAAc,SAASoB,GACnB,GAAa,WAAVA,GACA,GAAGC,OAAOC,QAAQ,6BAAS,CAGvB,IAFA,IAAIT,EAAYG,MAAMC,KAAKrD,KAAK6B,MAAMc,UAClCvC,EAAI,EACFA,EAAI6C,EAAU5C,QAAO,CACvB,GAAG4C,EAAU7C,GAAGI,KAAOR,KAAK6B,MAAMW,oBAAoB,CAClDS,EAAUU,OAAOvD,EAAG,GACpB,MAEJA,GAAQ,EAEZJ,KAAK+B,SAAS,CACVQ,KAAK,UACLI,SAASM,IAEbW,MAAM,0DAGT5D,KAAK+B,SAAS,CACVQ,KAAKiB,KAGf1C,KAAKd,QAEVA,KAAK6D,kB,GAzHJ7C,cCGE8C,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.97d587e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TOC extends Component {\n    shouldComponentUpdate(newProps, newState){\n        if(this.props.data === newProps.data){\n            return false;\n        }\n        return true;\n    }\n    render() {\n        var lists = []\n        var data = this.props.data\n        var i = 0;\n        while(i < data.length){\n            lists.push(\n                <li key={data[i].id}>\n                    <a \n                        href={\"/content/\"+data[i].id}\n                        onClick={function(id, e){\n                            e.preventDefault();\n                            this.props.onChangePage(id);\n                        }.bind(this, data[i].id)}\n                    >\n                        {data[i].title}\n                    </a>\n                </li>);\n            i = i + 1;\n        }\n        return(\n            <nav>\n                <ul>\n                    {lists}\n                </ul>\n            </nav>            \n        );\n    }\n}\n\nexport default TOC;\n","import React, { Component } from 'react';\n\nclass ReadContent extends Component {\n    render() {\n        return(\n            <article>\n                <h2>{this.props.title}</h2>\n                {this.props.desc}\n            </article>          \n        );\n    }\n}\n\nexport default ReadContent;","import React, { Component } from 'react';\n\nclass CreateContent extends Component {\n    render() {\n        return(\n            <article>\n                <h2>Create</h2>\n                <form action=\"/create_process/\" method=\"post\" \n                    onSubmit={function(e){\n                        e.preventDefault();\n                        this.props.onSubmit(\n                            e.target.title.value,\n                            e.target.desc.value\n                        );\n                    }.bind(this)}>\n                    <p><input type=\"text\" name=\"title\" placeholder=\"title\"></input></p>\n                    <p><textarea name=\"desc\" placeholder=\"description\"></textarea></p>\n                    <p><input type=\"submit\"></input></p>\n                </form>\n            </article>          \n        );\n    }\n}\n\nexport default CreateContent;","import React, { Component } from 'react';\n\nclass UpdateContent extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id:this.props.data.id,\n            title:this.props.data.title,\n            desc:this.props.data.desc\n        };\n        this.inputFormHandler = this.inputFormHandler.bind(this);\n    }\n    inputFormHandler(e){\n        this.setState({[e.target.name]:e.target.value});\n    }\n    render() {\n        return(\n            <article>\n                <h2>Update</h2>\n                <form action=\"/create_process/\" method=\"post\" \n                    onSubmit={function(e){\n                        e.preventDefault();\n                        this.props.onSubmit(\n                            this.state.id,\n                            this.state.title,\n                            this.state.desc\n                        );\n                    }.bind(this)}>\n                    <input type=\"hidden\" name=\"id\" value={this.state.id}></input>\n                    <p>\n                        <input \n                            type=\"text\" \n                            name=\"title\" \n                            placeholder=\"title\"\n                            value={this.state.title}\n                            onChange={this.inputFormHandler}>\n                        </input>\n                    </p>\n                    <p>\n                        <textarea \n                            name=\"desc\" \n                            placeholder=\"description\" \n                            value={this.state.desc}\n                            onChange={this.inputFormHandler}>\n                        </textarea>\n                    </p>\n                    <p><input type=\"submit\"></input></p>\n                </form>\n            </article>          \n        );\n    }\n}\n\nexport default UpdateContent;","import React, { Component } from 'react';\n\nclass Subject extends Component {\n    render() {\n        return(\n            <header>\n                <h1><a href=\"/\" onClick={function(e){\n                            e.preventDefault();\n                            this.props.onChangePage();\n                        }.bind(this)}>{this.props.title}</a></h1>\n                {this.props.sub}\n            </header>\n        );\n    }\n}\n\nexport default Subject;","import React, { Component } from 'react';\n\nclass Control extends Component {\n    render() {\n        return(\n            <ul>\n                <li><a href=\"/create/\" onClick={function(e){\n                            e.preventDefault();\n                            this.props.onChangeMode('create');\n                        }.bind(this)}>create</a></li>\n                <li><a href=\"/update/\" onClick={function(e){\n                            e.preventDefault();\n                            this.props.onChangeMode('update')\n                        }.bind(this)}>update</a></li>\n                <li><input onClick={function(e){\n                            e.preventDefault();\n                            this.props.onChangeMode('delete')\n                        }.bind(this)} type=\"button\" value=\"delete\"></input></li>\n            </ul>\n        );\n    }\n}\n\nexport default Control;","import React, { Component } from 'react';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent'\nimport CreateContent from './components/CreateContent'\nimport UpdateContent from './components/UpdateContent'\nimport Subject from './components/Subject'\nimport Control from './components/Control'\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.max_content_id = 3;\n        this.state = {\n            mode:'welcome',\n            selected_content_id:3,\n            subject:{\n                title:\"청구경희한의원 수원점\", \n                sub:\"임상과 연구를 결합하여 치료에 최선을 다하는 청구경희한의원입니다.\"\n            },\n            welcome:{\n                title:\"안녕하세요.\", \n                desc:\"청구경희한의원 수원점의 작은 홈페이지에 오신 것을 환영합니다.\"\n            },\n            contents:[\n                {id:1, title:\"진료시간\", desc:\"월-금 매일 8시, 토 2시까지\"},\n                {id:2, title:\"위치\", desc:\"수원시청역 7번출구 앞\"},\n                {id:3, title:\"인사말\", desc:\"안녕하세요. 김형규입니다.\"}\n            ]\n        }\n    }\n    getReadContent(){\n        var i = 0;\n        while(i < this.state.contents.length){\n            var data = this.state.contents[i];\n            if(data.id === this.state.selected_content_id){\n                return data;\n                //break;\n            };\n            i = i + 1\n        }\n    }\n    getContent(){\n        var _title, _desc, _article = null;\n        if(this.state.mode === 'welcome'){\n            _title = this.state.welcome.title;\n            _desc = this.state.welcome.desc;\n            _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n        } else if(this.state.mode === 'read'){\n            var _content = this.getReadContent();\n            _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n        } else if(this.state.mode === 'create'){\n            _article = <CreateContent onSubmit={function(_title, _desc){\n                        this.max_content_id = this.max_content_id + 1;\n                        var _contents = this.state.contents.concat(\n                            {id:this.max_content_id, title:_title, desc:_desc}\n                            );\n                        this.setState({\n                            contents:_contents,\n                            mode:\"read\",\n                            selected_content_id:this.max_content_id\n                        })\n                    }.bind(this)}></CreateContent>\n        } else if(this.state.mode === 'update'){\n            _content = this.getReadContent();\n            _article = <UpdateContent data={_content} onSubmit={function(_id, _title, _desc){\n                        var _contents = Array.from(this.state.contents);\n                        var i = 0;\n                        while(i < _contents.length){\n                            if(_contents[i].id === _id){\n                                _contents[i] = {id:_id, title:_title, desc:_desc};\n                                break\n                            }\n                            i = i + 1\n                        }\n                        this.setState({\n                            contents:_contents,\n                            mode:\"read\"\n                        })\n                    }.bind(this)}></UpdateContent>\n        }\n        return _article\n    }\n    render() {\n        return(\n            <div className=\"App\">\n                <Subject \n                    title={this.state.subject.title} \n                    sub={this.state.subject.sub}\n                    onChangePage={function(){\n                        this.setState({mode:'welcome'});\n                    }.bind(this)}\n                >\n                </Subject>\n                <TOC \n                    data={this.state.contents}\n                    onChangePage={function(id){\n                        this.setState({\n                            mode:'read',\n                            selected_content_id:Number(id)\n                        });\n                    }.bind(this)}\n                >\n                </TOC>\n                <Control \n                    onChangeMode={function(_mode){\n                        if(_mode === 'delete'){\n                           if(window.confirm('진짜로요?')){\n                               var _contents = Array.from(this.state.contents);\n                               var i = 0;\n                               while(i < _contents.length){\n                                   if(_contents[i].id === this.state.selected_content_id){\n                                       _contents.splice(i, 1);\n                                       break;\n                                   }\n                                   i = i + 1\n                               }\n                               this.setState({\n                                   mode:'welcome',\n                                   contents:_contents\n                               });\n                               alert('삭제되었습니다ㅠ')\n                           }\n                        } else {\n                            this.setState({\n                                mode:_mode\n                            });\n                        }\n                    }.bind(this)}>\n                </Control>\n                {this.getContent()}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}